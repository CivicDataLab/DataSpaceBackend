"""
Django settings for dataexbackend project.

Generated by 'django-admin startproject' using Django 4.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
from pathlib import Path

from dotenv import load_dotenv
import environ

load_dotenv()
env = environ.Env(DEBUG=(bool, False))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-af%#657wf@f-hclfimni96qy07fyhjbglc!@^98jpn9z%#9b6%'

# load env and variables
DB_ENGINE = os.getenv('DB_ENGINE', "django.db.backends.sqlite3"),
DB_NAME = os.getenv('DB_NAME', str(BASE_DIR / "db.sqlite3")),
DB_USER = os.getenv('DB_USER', "DB_USER"),
DB_PASSWORD = os.getenv('DB_PASSWORD', 'DB_PASSWORD'),
DB_HOST = os.getenv('DB_HOST', 'DB_HOST'),
DB_PORT = os.getenv('DB_PORT', 'DB_PORT'),
WELCOME_TEXT = os.getenv('WELCOME_TEXT', 'Hello World'),

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', True),
whitelisted_urls = env("URL_WHITELIST").split(',')
ALLOWED_HOSTS = whitelisted_urls + env("URL_WHITELIST").replace("https://", "").replace("http://", "").split(",")

CSRF_TRUSTED_ORIGINS = whitelisted_urls

CORS_ORIGIN_WHITELIST = whitelisted_urls

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'referer',
    'organization',
    'token',
]

CORS_ORIGIN_ALLOW_ALL = False

# Application definition

INSTALLED_APPS = [
    'api.apps.ApiConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'strawberry_django',
    'rest_framework',
    'django_elasticsearch_dsl',
    'django_elasticsearch_dsl_drf'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dataexbackend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dataexbackend.wsgi.application'

STRAWBERRY_DJANGO = {
    "FIELD_DESCRIPTION_FROM_HELP_TEXT": True,
    "TYPE_DESCRIPTION_FROM_MODEL_DOCSTRING": True,
    "GENERATE_ENUMS_FROM_CHOICES": True
}

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL = 'public/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'files', 'public')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
DJANGO_ALLOW_ASYNC_UNSAFE = True
ELASTICSEARCH_DSL = {
    'default': {
        'hosts': os.getenv("ELASTICSEARCH_INDEX", 'http://elasticsearch:9200'),
        'http_auth': (os.getenv("ELASTICSEARCH_USERNAME", 'elastic'), os.getenv("ELASTICSEARCH_PASSWORD", 'changeme'))
    }
}
TELEMETRY_URL = os.getenv("TELEMETRY_URL", 'http://otel-collector:4317')
ELASTICSEARCH_INDEX_NAMES = {
    'search.documents.dataset_document': 'dataset',
}
